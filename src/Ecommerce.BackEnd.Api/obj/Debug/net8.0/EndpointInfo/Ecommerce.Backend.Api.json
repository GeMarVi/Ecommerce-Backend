{
  "openapi": "3.0.1",
  "info": {
    "title": "Sniker_Store",
    "version": "v1"
  },
  "paths": {
    "/api/User/v1/user-register": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Email",
                  "Password"
                ],
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "format": "email"
                  },
                  "Password": {
                    "pattern": "^(?=.*[A-Z])(?=.*\\d)(?=.*\\W)(?=.*[a-z]).{6,}$",
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Email": {
                  "style": "form"
                },
                "Password": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/v1/user-login": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Email",
                  "Password"
                ],
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "format": "email"
                  },
                  "Password": {
                    "pattern": "^(?=.*[A-Z])(?=.*\\d)(?=.*\\W)(?=.*[a-z]).{6,}$",
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Email": {
                  "style": "form"
                },
                "Password": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/v1/user-confirm": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "code",
                  "id"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "maxLength": 40,
                    "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
                    "type": "string"
                  },
                  "code": {
                    "maxLength": 6,
                    "minLength": 0,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "id": {
                  "style": "form"
                },
                "code": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/v1/get-new-verification-code/{id}": {
      "post": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/v1/get-new-tokens": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokensRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokensRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokensRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/v1/test-auth": {
      "post": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TokensRequestDto": {
        "required": [
          "refreshToken",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          },
          "refreshToken": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \r\n                        \\r\\n\\r\\n Enter prefix (Bearer), space, and then your token. \r\n                        Example: 'Bearer 1231233kjsdlkajdksad'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}